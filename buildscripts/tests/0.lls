array<i32, 10> arr = {
  char("T"), char("E"), char("S"), char("T"), char("t"), char("e"), char("s"), char("t"), char("!"), char("?")
};

text kernel32dll = "Kernel32.dll";
text writeFileA = "WriteFile";

voidptr kernel32dll_handle = load_library(kernel32dll);
voidptr writeFileAAddr = get_proc_address(kernel32dll_handle, writeFileA);

extern_func<u8 (voidptr, ptr<i8>, u32, ptr<u32>, voidptr)> writeFileAFunc = cast<extern_func<u8 (voidptr, ptr<i8>, u32, ptr<u32>, voidptr)>>(writeFileAAddr);

voidptr stdOutHandle;

text getStdHandle = "GetStdHandle";
voidptr getStdHandleAddr = get_proc_address(kernel32dll_handle, getStdHandle);
extern_func<voidptr (u32)> getStdHandleFunc = cast<extern_func<voidptr (u32)>>(getStdHandleAddr);

u32 STD_OUTPUT_HANDLE = cast<u32>(-11);
stdOutHandle = getStdHandleFunc(STD_OUTPUT_HANDLE);

text content = "Test0";

i32 i = 0;
u32 _unused;

while (i < countof(arr))
{
  valueof(content + 4) = cast<i8>(valueof(arr + i));
  
  writeFileAFunc(stdOutHandle, content, countof(content) - 1, addressof(_unused), null);
  
  i++;
}
